{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "Query Builder Tree to SQL Expression",
  "description": "Schema for validating tree JSON produced by react-awesome-query-builder with SQL generation in mind",
  "oneOf": [
    {
      "$ref": "#/$defs/ruleRootNode"
    },
    {
      "type": "array",
      "items": {
        "$ref": "#/$defs/ruleRootNode"
      },
      "description": "Array of rule expressions"
    }
  ],
  "$defs": {
    "ruleRootNode": {
      "type": "object",
      "required": ["id", "type"],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the node"
        },
        "type": {
          "type": "string",
          "enum": ["group", "rule"],
          "description": "Type of the node: either a group or a rule"
        }
      },
      "oneOf": [
        {
          "$ref": "#/$defs/groupNode"
        },
        {
          "$ref": "#/$defs/expressionNode"
        }
      ]
    },
    "groupNode": {
      "type": "object",
      "required": ["type", "properties", "children1"],
      "properties": {
        "type": {
          "const": "group"
        },
        "properties": {
          "type": "object",
          "required": ["conjunction"],
          "properties": {
            "conjunction": {
              "type": "string",
              "enum": ["AND", "OR"],
              "description": "Logical operator for combining child rules"
            },
            "not": {
              "type": "boolean",
              "description": "Whether to negate the entire group"
            }
          }
        },
        "children1": {
          "type": "array",
          "description": "Child nodes for group type",
          "items": {
            "$ref": "#/$defs/ruleRootNode"
          }
        }
      }
    },
    "expressionNode": {
      "type": "object",
      "required": ["type", "properties"],
      "properties": {
        "type": {
          "const": "rule"
        },
        "properties": {
          "type": "object",
          "required": ["field", "fieldSrc", "operator"],
          "allOf": [
            {
              "if": {
                "properties": {
                  "operator": { "enum": ["none"] }
                }
              },
              "then": {
                "properties": {
                  "value": {
                    "description": "Value is optional when operator is 'none'"
                  }
                }
              },
              "else": {
                "required": ["value"]
              }
            }
          ],
          "properties": {
            "field": {
              "description" : "Field = Left hand side of condition",
              "oneOf": [
                {
                  "type": "string",
                  "description": "Field name as a simple string"
                },
                {"$ref": "#/$defs/function"},
                {"$ref": "#/$defs/fieldReference"}
              ]
            },
            "operator": {
              "type": "string",
              "description": "Comparison operator",
              "enum": [
                "equal",
                "not_equal",
                "less",
                "less_or_equal",
                "greater",
                "greater_or_equal",
                "like",
                "not_like",
                "starts_with",
                "ends_with",
                "between",
                "not_between",
                "is_null",
                "is_not_null",
                "is_empty",
                "is_not_empty",
                "none"
              ]
            },
            "value": {
              "description": "Value = Right hand side of expression (value(s) to compare against)",
              "oneOf": [
                { "type": "string" },
                { "type": "number" },
                { "type": "boolean" },
                { "$ref": "#/$defs/function" },
                { "$ref": "#/$defs/fieldReference" }
              ]
            },
            "valueType": {
              "oneOf": [
                {
                  "type": "string",
                  "description": "Type of the value",
                  "enum": ["text", "number", "boolean", "date", "time", "datetime"]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": ["text", "number", "boolean", "date", "time", "datetime"]
                  },
                  "description": "Types of multiple values"
                }
              ]
            },
            "valueSrc": {
              "oneOf": [
                { 
                  "type": "string",
                  "enum": ["value", "field", "func"],
                  "description": "Source of the value" 
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": ["value", "field", "func"]
                  },
                  "description": "Sources of multiple values"
                }
              ]
            },
            "valueError": {
              "type": ["string", "array", "null"],
              "description": "Error message if value is invalid"
            },
            "operatorOptions": {
              "type": "object",
              "description": "Options specific to the operator"
            },
            "fieldSrc": {
              "type": "string",
              "description": "Source of the field"
            },
            "not": {
              "type": "boolean",
              "description": "Whether to negate this rule"
            }
          }
        }
      },
      "not": {
        "required": ["children1"]
      }
    },
    "function": {
        "type": "object",
        "description": "Field as an object with function and args",
        "required": ["func"],
        "properties": {
          "func": {
            "type": "string",
            "description": "Function name for function-based operations",
            "enum": [
              "Rule.Functions.RULE_NAME", 
              "Rule.Functions.RULE_REF", 
              "Rule.Functions.$", 
              "Excel.String.MID", 
              "Excel.String.LEN", 
              "Excel.String.TEXT", 
              "Excel.Number.SUM"
            ]
          },
          "args": {
            "type": "object"
          }
        },
        "additionalProperties": false
    },
    "fieldReference": {
      "type": "object",
      "description": "Reference to a field used as a value",
      "required": ["value", "valueType", "valueSrc"],
      "properties": {
        "value": {
          "type": "string",
          "description": "Field name to use as a value"
        },
        "valueType": {
          "type": "string",
          "enum": ["text", "number", "boolean", "date", "time", "datetime"],
          "description": "Type of the field value"
        },
        "valueSrc": {
          "type": "string",
          "enum": ["field"],
          "description": "Source type must be 'field'"
        }
      },
      "additionalProperties": false
    }
  }
}